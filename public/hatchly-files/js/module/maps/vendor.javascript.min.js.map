{"version":3,"sources":["dropzone.js"],"names":["Dropzone","Emitter","camelize","contentLoaded","detectVerticalSquash","drawImageIOSFix","noop","without","__slice","slice","__hasProp","hasOwnProperty","__extends","child","parent","ctor","this","constructor","key","call","prototype","__super__","addEventListener","on","event","fn","_callbacks","push","emit","args","callbacks","_i","_len","arguments","length","apply","removeListener","off","removeAllListeners","removeEventListener","i","splice","_super","element","options","elementOptions","fallback","_ref","version","defaultOptions","previewTemplate","replace","clickableElements","listeners","files","document","querySelector","nodeType","Error","dropzone","instances","optionsForElement","extend","forceFallback","isBrowserSupported","url","getAttribute","acceptedFiles","acceptedMimeTypes","method","toUpperCase","getExistingFallback","parentNode","removeChild","previewsContainer","getElement","clickable","getElements","init","resolveOption","events","withCredentials","parallelUploads","uploadMultiple","maxFilesize","paramName","createImageThumbnails","maxThumbnailFilesize","thumbnailWidth","thumbnailHeight","filesizeBase","maxFiles","params","ignoreHiddenFiles","autoProcessQueue","autoQueue","addRemoveLinks","capture","dictDefaultMessage","dictFallbackMessage","dictFallbackText","dictFileTooBig","dictInvalidFileType","dictResponseError","dictCancelUpload","dictCancelUploadConfirmation","dictRemoveFile","dictRemoveFileConfirmation","dictMaxFilesExceeded","accept","file","done","messageElement","span","className","getElementsByTagName","test","createElement","appendChild","textContent","getFallbackForm","resize","info","srcRatio","trgRatio","srcX","srcY","srcWidth","width","srcHeight","height","optWidth","optHeight","trgHeight","trgWidth","drop","e","classList","remove","dragstart","dragend","dragenter","add","dragover","dragleave","paste","reset","addedfile","removeFileEvent","removeLink","_j","_k","_len1","_len2","_ref1","_ref2","_results","previewElement","trim","querySelectorAll","name","innerHTML","filesize","size","_removeLink","_this","preventDefault","stopPropagation","status","UPLOADING","confirm","removeFile","removedfile","_updateMaxFilesReachedClass","thumbnail","dataUrl","thumbnailElement","alt","src","setTimeout","error","message","node","errormultiple","processing","processingmultiple","uploadprogress","progress","bytesSent","nodeName","value","style","totaluploadprogress","sending","sendingmultiple","success","successmultiple","canceled","canceledmultiple","complete","completemultiple","maxfilesexceeded","maxfilesreached","queuecomplete","object","objects","target","val","getAcceptedFiles","accepted","getRejectedFiles","getFilesWithStatus","getQueuedFiles","QUEUED","getUploadingFiles","getActiveFiles","eventName","noPropagation","setupHiddenFileInput","tagName","setAttribute","contains","hiddenFileInput","body","visibility","position","top","left","addFile","URL","window","webkitURL","updateTotalUploadProgress","returnValue","efct","dataTransfer","effectAllowed","_error","dropEffect","forEach","clickableElement","click","evt","elementInside","enable","destroy","disable","removeAllFiles","indexOf","totalBytes","totalBytesSent","totalUploadProgress","upload","total","_getParamName","n","existingFallback","fields","fieldsString","form","getFallback","elements","el","setupEventListeners","elementListeners","listener","_results1","removeEventListeners","cancelUpload","cutoff","selectedSize","selectedUnit","unit","units","Math","pow","round","items","webkitGetAsEntry","_addFilesFromItems","handleFiles","clipboardData","entry","item","isFile","getAsFile","isDirectory","_addFilesFromDirectory","kind","directory","path","dirReader","entriesReader","createReader","entries","substring","fullPath","readEntries","console","log","isValidFile","ADDED","_enqueueThumbnail","_errorProcessing","enqueueFile","enqueueFiles","processQueue","_thumbnailQueue","_processingThumbnail","type","match","_processThumbnailQueue","createThumbnail","shift","cancelIfNecessary","callback","fileReader","FileReader","onload","result","createThumbnailFromUrl","readAsDataURL","imageUrl","img","canvas","ctx","resizeInfo","_ref3","getContext","trgX","trgY","toDataURL","onerror","processingLength","queuedFiles","processFiles","processFile","uploadFiles","_getFilesWithXhr","xhr","groupedFile","groupedFiles","CANCELED","abort","option","uploadFile","formData","handleError","headerName","headerValue","headers","input","inputName","inputType","response","updateProgress","_l","_len3","_m","_ref4","_ref5","XMLHttpRequest","open","allFilesFinished","loaded","readyState","responseText","getResponseHeader","JSON","parse","_finished","onprogress","Accept","Cache-Control","X-Requested-With","setRequestHeader","FormData","append","hasAttribute","selected","toLowerCase","checked","send","SUCCESS","ERROR","forElement","autoDiscover","discover","checkElements","dropzones","blacklistedBrowsers","capableBrowser","File","FileList","Blob","navigator","userAgent","list","rejectedItem","str","charAt","string","div","childNodes","container","els","Array","question","rejected","baseMimeType","mimeType","validType","split","jQuery","each","module","exports","ACCEPTED","PROCESSING","data","ey","ih","py","ratio","sy","naturalWidth","naturalHeight","drawImage","getImageData","sx","sw","sh","dx","dy","dw","dh","vertSquashRatio","win","doc","poll","pre","rem","root","documentElement","doScroll","createEventObject","frameElement","_autoDiscoverFunction"],"mappings":"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","file":"../vendor.javascript.min.js","sourcesContent":["\n/*\n *\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n *\n * Copyright (c) 2012, Matias Meno\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n(function() {\n  var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\n    __slice = [].slice,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  noop = function() {};\n\n  Emitter = (function() {\n    function Emitter() {}\n\n    Emitter.prototype.addEventListener = Emitter.prototype.on;\n\n    Emitter.prototype.on = function(event, fn) {\n      this._callbacks = this._callbacks || {};\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(fn);\n      return this;\n    };\n\n    Emitter.prototype.emit = function() {\n      var args, callback, callbacks, event, _i, _len;\n      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      this._callbacks = this._callbacks || {};\n      callbacks = this._callbacks[event];\n      if (callbacks) {\n        for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n          callback = callbacks[_i];\n          callback.apply(this, args);\n        }\n      }\n      return this;\n    };\n\n    Emitter.prototype.removeListener = Emitter.prototype.off;\n\n    Emitter.prototype.removeAllListeners = Emitter.prototype.off;\n\n    Emitter.prototype.removeEventListener = Emitter.prototype.off;\n\n    Emitter.prototype.off = function(event, fn) {\n      var callback, callbacks, i, _i, _len;\n      if (!this._callbacks || arguments.length === 0) {\n        this._callbacks = {};\n        return this;\n      }\n      callbacks = this._callbacks[event];\n      if (!callbacks) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        delete this._callbacks[event];\n        return this;\n      }\n      for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {\n        callback = callbacks[i];\n        if (callback === fn) {\n          callbacks.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    return Emitter;\n\n  })();\n\n  Dropzone = (function(_super) {\n    var extend, resolveOption;\n\n    __extends(Dropzone, _super);\n\n    Dropzone.prototype.Emitter = Emitter;\n\n\n    /*\n    This is a list of all available events you can register on a dropzone object.\n    \n    You can register an event handler like this:\n    \n        dropzone.on(\"dragEnter\", function() { });\n     */\n\n    Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\n\n    Dropzone.prototype.defaultOptions = {\n      url: null,\n      method: \"post\",\n      withCredentials: false,\n      parallelUploads: 2,\n      uploadMultiple: false,\n      maxFilesize: 256,\n      paramName: \"file\",\n      createImageThumbnails: true,\n      maxThumbnailFilesize: 10,\n      thumbnailWidth: 120,\n      thumbnailHeight: 120,\n      filesizeBase: 1000,\n      maxFiles: null,\n      filesizeBase: 1000,\n      params: {},\n      clickable: true,\n      ignoreHiddenFiles: true,\n      acceptedFiles: null,\n      acceptedMimeTypes: null,\n      autoProcessQueue: true,\n      autoQueue: true,\n      addRemoveLinks: false,\n      previewsContainer: null,\n      capture: null,\n      dictDefaultMessage: \"Drop files here to upload\",\n      dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      dictInvalidFileType: \"You can't upload files of this type.\",\n      dictResponseError: \"Server responded with {{statusCode}} code.\",\n      dictCancelUpload: \"Cancel upload\",\n      dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      dictRemoveFile: \"Remove file\",\n      dictRemoveFileConfirmation: null,\n      dictMaxFilesExceeded: \"You can not upload any more files.\",\n      accept: function(file, done) {\n        return done();\n      },\n      init: function() {\n        return noop;\n      },\n      forceFallback: false,\n      fallback: function() {\n        var child, messageElement, span, _i, _len, _ref;\n        this.element.className = \"\" + this.element.className + \" dz-browser-not-supported\";\n        _ref = this.element.getElementsByTagName(\"div\");\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\";\n            continue;\n          }\n        }\n        if (!messageElement) {\n          messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\n          this.element.appendChild(messageElement);\n        }\n        span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n          span.textContent = this.options.dictFallbackMessage;\n        }\n        return this.element.appendChild(this.getFallbackForm());\n      },\n      resize: function(file) {\n        var info, srcRatio, trgRatio;\n        info = {\n          srcX: 0,\n          srcY: 0,\n          srcWidth: file.width,\n          srcHeight: file.height\n        };\n        srcRatio = file.width / file.height;\n        info.optWidth = this.options.thumbnailWidth;\n        info.optHeight = this.options.thumbnailHeight;\n        if ((info.optWidth == null) && (info.optHeight == null)) {\n          info.optWidth = info.srcWidth;\n          info.optHeight = info.srcHeight;\n        } else if (info.optWidth == null) {\n          info.optWidth = srcRatio * info.optHeight;\n        } else if (info.optHeight == null) {\n          info.optHeight = (1 / srcRatio) * info.optWidth;\n        }\n        trgRatio = info.optWidth / info.optHeight;\n        if (file.height < info.optHeight || file.width < info.optWidth) {\n          info.trgHeight = info.srcHeight;\n          info.trgWidth = info.srcWidth;\n        } else {\n          if (srcRatio > trgRatio) {\n            info.srcHeight = file.height;\n            info.srcWidth = info.srcHeight * trgRatio;\n          } else {\n            info.srcWidth = file.width;\n            info.srcHeight = info.srcWidth / trgRatio;\n          }\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        return info;\n      },\n\n      /*\n      Those functions register themselves to the events on init and handle all\n      the user interface specific stuff. Overwriting them won't break the upload\n      but can break the way it's displayed.\n      You can overwrite them if you don't like the default behavior. If you just\n      want to add an additional event handler, register it on the dropzone object\n      and don't overwrite those options.\n       */\n      drop: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart: noop,\n      dragend: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste: noop,\n      reset: function() {\n        return this.element.classList.remove(\"dz-started\");\n      },\n      addedfile: function(file) {\n        var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n        if (this.element === this.previewsContainer) {\n          this.element.classList.add(\"dz-started\");\n        }\n        if (this.previewsContainer) {\n          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\n          file.previewTemplate = file.previewElement;\n          this.previewsContainer.appendChild(file.previewElement);\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            node.textContent = file.name;\n          }\n          _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            node = _ref1[_j];\n            node.innerHTML = this.filesize(file.size);\n          }\n          if (this.options.addRemoveLinks) {\n            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n            file.previewElement.appendChild(file._removeLink);\n          }\n          removeFileEvent = (function(_this) {\n            return function(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              if (file.status === Dropzone.UPLOADING) {\n                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {\n                  return _this.removeFile(file);\n                });\n              } else {\n                if (_this.options.dictRemoveFileConfirmation) {\n                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {\n                    return _this.removeFile(file);\n                  });\n                } else {\n                  return _this.removeFile(file);\n                }\n              }\n            };\n          })(this);\n          _ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");\n          _results = [];\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n            removeLink = _ref2[_k];\n            _results.push(removeLink.addEventListener(\"click\", removeFileEvent));\n          }\n          return _results;\n        }\n      },\n      removedfile: function(file) {\n        var _ref;\n        if (file.previewElement) {\n          if ((_ref = file.previewElement) != null) {\n            _ref.parentNode.removeChild(file.previewElement);\n          }\n        }\n        return this._updateMaxFilesReachedClass();\n      },\n      thumbnail: function(file, dataUrl) {\n        var thumbnailElement, _i, _len, _ref;\n        if (file.previewElement) {\n          file.previewElement.classList.remove(\"dz-file-preview\");\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            thumbnailElement = _ref[_i];\n            thumbnailElement.alt = file.name;\n            thumbnailElement.src = dataUrl;\n          }\n          return setTimeout(((function(_this) {\n            return function() {\n              return file.previewElement.classList.add(\"dz-image-preview\");\n            };\n          })(this)), 1);\n        }\n      },\n      error: function(file, message) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-error\");\n          if (typeof message !== \"String\" && message.error) {\n            message = message.error;\n          }\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            _results.push(node.textContent = message);\n          }\n          return _results;\n        }\n      },\n      errormultiple: noop,\n      processing: function(file) {\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-processing\");\n          if (file._removeLink) {\n            return file._removeLink.textContent = this.options.dictCancelUpload;\n          }\n        }\n      },\n      processingmultiple: noop,\n      uploadprogress: function(file, progress, bytesSent) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            if (node.nodeName === 'PROGRESS') {\n              _results.push(node.value = progress);\n            } else {\n              _results.push(node.style.width = \"\" + progress + \"%\");\n            }\n          }\n          return _results;\n        }\n      },\n      totaluploadprogress: noop,\n      sending: noop,\n      sendingmultiple: noop,\n      success: function(file) {\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-success\");\n        }\n      },\n      successmultiple: noop,\n      canceled: function(file) {\n        return this.emit(\"error\", file, \"Upload canceled.\");\n      },\n      canceledmultiple: noop,\n      complete: function(file) {\n        if (file._removeLink) {\n          file._removeLink.textContent = this.options.dictRemoveFile;\n        }\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-complete\");\n        }\n      },\n      completemultiple: noop,\n      maxfilesexceeded: noop,\n      maxfilesreached: noop,\n      queuecomplete: noop,\n      previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"Check-+-Oval-2\\\" sketch:type=\\\"MSLayerGroup\\\" stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\"\n    };\n\n    extend = function() {\n      var key, object, objects, target, val, _i, _len;\n      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      for (_i = 0, _len = objects.length; _i < _len; _i++) {\n        object = objects[_i];\n        for (key in object) {\n          val = object[key];\n          target[key] = val;\n        }\n      }\n      return target;\n    };\n\n    function Dropzone(element, options) {\n      var elementOptions, fallback, _ref;\n      this.element = element;\n      this.version = Dropzone.version;\n      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\n      this.clickableElements = [];\n      this.listeners = [];\n      this.files = [];\n      if (typeof this.element === \"string\") {\n        this.element = document.querySelector(this.element);\n      }\n      if (!(this.element && (this.element.nodeType != null))) {\n        throw new Error(\"Invalid dropzone element.\");\n      }\n      if (this.element.dropzone) {\n        throw new Error(\"Dropzone already attached.\");\n      }\n      Dropzone.instances.push(this);\n      this.element.dropzone = this;\n      elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};\n      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\n      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\n        return this.options.fallback.call(this);\n      }\n      if (this.options.url == null) {\n        this.options.url = this.element.getAttribute(\"action\");\n      }\n      if (!this.options.url) {\n        throw new Error(\"No URL provided.\");\n      }\n      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\n        throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n      }\n      if (this.options.acceptedMimeTypes) {\n        this.options.acceptedFiles = this.options.acceptedMimeTypes;\n        delete this.options.acceptedMimeTypes;\n      }\n      this.options.method = this.options.method.toUpperCase();\n      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\n        fallback.parentNode.removeChild(fallback);\n      }\n      if (this.options.previewsContainer !== false) {\n        if (this.options.previewsContainer) {\n          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");\n        } else {\n          this.previewsContainer = this.element;\n        }\n      }\n      if (this.options.clickable) {\n        if (this.options.clickable === true) {\n          this.clickableElements = [this.element];\n        } else {\n          this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");\n        }\n      }\n      this.init();\n    }\n\n    Dropzone.prototype.getAcceptedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getRejectedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (!file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getFilesWithStatus = function(status) {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === status) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getQueuedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.QUEUED);\n    };\n\n    Dropzone.prototype.getUploadingFiles = function() {\n      return this.getFilesWithStatus(Dropzone.UPLOADING);\n    };\n\n    Dropzone.prototype.getActiveFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.init = function() {\n      var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;\n      if (this.element.tagName === \"form\") {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n      }\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n      }\n      if (this.clickableElements.length) {\n        setupHiddenFileInput = (function(_this) {\n          return function() {\n            if (_this.hiddenFileInput) {\n              document.body.removeChild(_this.hiddenFileInput);\n            }\n            _this.hiddenFileInput = document.createElement(\"input\");\n            _this.hiddenFileInput.setAttribute(\"type\", \"file\");\n            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\n              _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n            }\n            _this.hiddenFileInput.className = \"dz-hidden-input\";\n            if (_this.options.acceptedFiles != null) {\n              _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);\n            }\n            if (_this.options.capture != null) {\n              _this.hiddenFileInput.setAttribute(\"capture\", _this.options.capture);\n            }\n            _this.hiddenFileInput.style.visibility = \"hidden\";\n            _this.hiddenFileInput.style.position = \"absolute\";\n            _this.hiddenFileInput.style.top = \"0\";\n            _this.hiddenFileInput.style.left = \"0\";\n            _this.hiddenFileInput.style.height = \"0\";\n            _this.hiddenFileInput.style.width = \"0\";\n            document.body.appendChild(_this.hiddenFileInput);\n            return _this.hiddenFileInput.addEventListener(\"change\", function() {\n              var file, files, _i, _len;\n              files = _this.hiddenFileInput.files;\n              if (files.length) {\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                  file = files[_i];\n                  _this.addFile(file);\n                }\n              }\n              return setupHiddenFileInput();\n            });\n          };\n        })(this);\n        setupHiddenFileInput();\n      }\n      this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;\n      _ref1 = this.events;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        eventName = _ref1[_i];\n        this.on(eventName, this.options[eventName]);\n      }\n      this.on(\"uploadprogress\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"removedfile\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"canceled\", (function(_this) {\n        return function(file) {\n          return _this.emit(\"complete\", file);\n        };\n      })(this));\n      this.on(\"complete\", (function(_this) {\n        return function(file) {\n          if (_this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\n            return setTimeout((function() {\n              return _this.emit(\"queuecomplete\");\n            }), 0);\n          }\n        };\n      })(this));\n      noPropagation = function(e) {\n        e.stopPropagation();\n        if (e.preventDefault) {\n          return e.preventDefault();\n        } else {\n          return e.returnValue = false;\n        }\n      };\n      this.listeners = [\n        {\n          element: this.element,\n          events: {\n            \"dragstart\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragstart\", e);\n              };\n            })(this),\n            \"dragenter\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.emit(\"dragenter\", e);\n              };\n            })(this),\n            \"dragover\": (function(_this) {\n              return function(e) {\n                var efct;\n                try {\n                  efct = e.dataTransfer.effectAllowed;\n                } catch (_error) {}\n                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\n                noPropagation(e);\n                return _this.emit(\"dragover\", e);\n              };\n            })(this),\n            \"dragleave\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragleave\", e);\n              };\n            })(this),\n            \"drop\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.drop(e);\n              };\n            })(this),\n            \"dragend\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragend\", e);\n              };\n            })(this)\n          }\n        }\n      ];\n      this.clickableElements.forEach((function(_this) {\n        return function(clickableElement) {\n          return _this.listeners.push({\n            element: clickableElement,\n            events: {\n              \"click\": function(evt) {\n                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                  return _this.hiddenFileInput.click();\n                }\n              }\n            }\n          });\n        };\n      })(this));\n      this.enable();\n      return this.options.init.call(this);\n    };\n\n    Dropzone.prototype.destroy = function() {\n      var _ref;\n      this.disable();\n      this.removeAllFiles(true);\n      if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n        this.hiddenFileInput = null;\n      }\n      delete this.element.dropzone;\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\n    };\n\n    Dropzone.prototype.updateTotalUploadProgress = function() {\n      var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;\n      totalBytesSent = 0;\n      totalBytes = 0;\n      activeFiles = this.getActiveFiles();\n      if (activeFiles.length) {\n        _ref = this.getActiveFiles();\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          totalBytesSent += file.upload.bytesSent;\n          totalBytes += file.upload.total;\n        }\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;\n      } else {\n        totalUploadProgress = 100;\n      }\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    };\n\n    Dropzone.prototype._getParamName = function(n) {\n      if (typeof this.options.paramName === \"function\") {\n        return this.options.paramName(n);\n      } else {\n        return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");\n      }\n    };\n\n    Dropzone.prototype.getFallbackForm = function() {\n      var existingFallback, fields, fieldsString, form;\n      if (existingFallback = this.getExistingFallback()) {\n        return existingFallback;\n      }\n      fieldsString = \"<div class=\\\"dz-fallback\\\">\";\n      if (this.options.dictFallbackText) {\n        fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";\n      }\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n      fields = Dropzone.createElement(fieldsString);\n      if (this.element.tagName !== \"FORM\") {\n        form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n        form.appendChild(fields);\n      } else {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        this.element.setAttribute(\"method\", this.options.method);\n      }\n      return form != null ? form : fields;\n    };\n\n    Dropzone.prototype.getExistingFallback = function() {\n      var fallback, getFallback, tagName, _i, _len, _ref;\n      getFallback = function(elements) {\n        var el, _i, _len;\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )fallback($| )/.test(el.className)) {\n            return el;\n          }\n        }\n      };\n      _ref = [\"div\", \"form\"];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        tagName = _ref[_i];\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\n          return fallback;\n        }\n      }\n    };\n\n    Dropzone.prototype.setupEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.addEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.removeEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.removeEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.disable = function() {\n      var file, _i, _len, _ref, _results;\n      this.clickableElements.forEach(function(element) {\n        return element.classList.remove(\"dz-clickable\");\n      });\n      this.removeEventListeners();\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        _results.push(this.cancelUpload(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.enable = function() {\n      this.clickableElements.forEach(function(element) {\n        return element.classList.add(\"dz-clickable\");\n      });\n      return this.setupEventListeners();\n    };\n\n    Dropzone.prototype.filesize = function(size) {\n      var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;\n      units = ['TB', 'GB', 'MB', 'KB', 'b'];\n      selectedSize = selectedUnit = null;\n      for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {\n        unit = units[i];\n        cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n        if (size >= cutoff) {\n          selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n          selectedUnit = unit;\n          break;\n        }\n      }\n      selectedSize = Math.round(10 * selectedSize) / 10;\n      return \"<strong>\" + selectedSize + \"</strong> \" + selectedUnit;\n    };\n\n    Dropzone.prototype._updateMaxFilesReachedClass = function() {\n      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {\n          this.emit('maxfilesreached', this.files);\n        }\n        return this.element.classList.add(\"dz-max-files-reached\");\n      } else {\n        return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n    };\n\n    Dropzone.prototype.drop = function(e) {\n      var files, items;\n      if (!e.dataTransfer) {\n        return;\n      }\n      this.emit(\"drop\", e);\n      files = e.dataTransfer.files;\n      if (files.length) {\n        items = e.dataTransfer.items;\n        if (items && items.length && (items[0].webkitGetAsEntry != null)) {\n          this._addFilesFromItems(items);\n        } else {\n          this.handleFiles(files);\n        }\n      }\n    };\n\n    Dropzone.prototype.paste = function(e) {\n      var items, _ref;\n      if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {\n        return;\n      }\n      this.emit(\"paste\", e);\n      items = e.clipboardData.items;\n      if (items.length) {\n        return this._addFilesFromItems(items);\n      }\n    };\n\n    Dropzone.prototype.handleFiles = function(files) {\n      var file, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        _results.push(this.addFile(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromItems = function(items) {\n      var entry, item, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = items.length; _i < _len; _i++) {\n        item = items[_i];\n        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\n          if (entry.isFile) {\n            _results.push(this.addFile(item.getAsFile()));\n          } else if (entry.isDirectory) {\n            _results.push(this._addFilesFromDirectory(entry, entry.name));\n          } else {\n            _results.push(void 0);\n          }\n        } else if (item.getAsFile != null) {\n          if ((item.kind == null) || item.kind === \"file\") {\n            _results.push(this.addFile(item.getAsFile()));\n          } else {\n            _results.push(void 0);\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {\n      var dirReader, entriesReader;\n      dirReader = directory.createReader();\n      entriesReader = (function(_this) {\n        return function(entries) {\n          var entry, _i, _len;\n          for (_i = 0, _len = entries.length; _i < _len; _i++) {\n            entry = entries[_i];\n            if (entry.isFile) {\n              entry.file(function(file) {\n                if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\n                  return;\n                }\n                file.fullPath = \"\" + path + \"/\" + file.name;\n                return _this.addFile(file);\n              });\n            } else if (entry.isDirectory) {\n              _this._addFilesFromDirectory(entry, \"\" + path + \"/\" + entry.name);\n            }\n          }\n        };\n      })(this);\n      return dirReader.readEntries(entriesReader, function(error) {\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n      });\n    };\n\n    Dropzone.prototype.accept = function(file, done) {\n      if (file.size > this.options.maxFilesize * 1024 * 1024) {\n        return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\n        return done(this.options.dictInvalidFileType);\n      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n        return this.emit(\"maxfilesexceeded\", file);\n      } else {\n        return this.options.accept.call(this, file, done);\n      }\n    };\n\n    Dropzone.prototype.addFile = function(file) {\n      file.upload = {\n        progress: 0,\n        total: file.size,\n        bytesSent: 0\n      };\n      this.files.push(file);\n      file.status = Dropzone.ADDED;\n      this.emit(\"addedfile\", file);\n      this._enqueueThumbnail(file);\n      return this.accept(file, (function(_this) {\n        return function(error) {\n          if (error) {\n            file.accepted = false;\n            _this._errorProcessing([file], error);\n          } else {\n            file.accepted = true;\n            if (_this.options.autoQueue) {\n              _this.enqueueFile(file);\n            }\n          }\n          return _this._updateMaxFilesReachedClass();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.enqueueFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        this.enqueueFile(file);\n      }\n      return null;\n    };\n\n    Dropzone.prototype.enqueueFile = function(file) {\n      if (file.status === Dropzone.ADDED && file.accepted === true) {\n        file.status = Dropzone.QUEUED;\n        if (this.options.autoProcessQueue) {\n          return setTimeout(((function(_this) {\n            return function() {\n              return _this.processQueue();\n            };\n          })(this)), 0);\n        }\n      } else {\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n    };\n\n    Dropzone.prototype._thumbnailQueue = [];\n\n    Dropzone.prototype._processingThumbnail = false;\n\n    Dropzone.prototype._enqueueThumbnail = function(file) {\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);\n        return setTimeout(((function(_this) {\n          return function() {\n            return _this._processThumbnailQueue();\n          };\n        })(this)), 0);\n      }\n    };\n\n    Dropzone.prototype._processThumbnailQueue = function() {\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\n        return;\n      }\n      this._processingThumbnail = true;\n      return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {\n        return function() {\n          _this._processingThumbnail = false;\n          return _this._processThumbnailQueue();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.removeFile = function(file) {\n      if (file.status === Dropzone.UPLOADING) {\n        this.cancelUpload(file);\n      }\n      this.files = without(this.files, file);\n      this.emit(\"removedfile\", file);\n      if (this.files.length === 0) {\n        return this.emit(\"reset\");\n      }\n    };\n\n    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {\n      var file, _i, _len, _ref;\n      if (cancelIfNecessary == null) {\n        cancelIfNecessary = false;\n      }\n      _ref = this.files.slice();\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\n          this.removeFile(file);\n        }\n      }\n      return null;\n    };\n\n    Dropzone.prototype.createThumbnail = function(file, callback) {\n      var fileReader;\n      fileReader = new FileReader;\n      fileReader.onload = (function(_this) {\n        return function() {\n          if (file.type === \"image/svg+xml\") {\n            _this.emit(\"thumbnail\", file, fileReader.result);\n            if (callback != null) {\n              callback();\n            }\n            return;\n          }\n          return _this.createThumbnailFromUrl(file, fileReader.result, callback);\n        };\n      })(this);\n      return fileReader.readAsDataURL(file);\n    };\n\n    Dropzone.prototype.createThumbnailFromUrl = function(file, imageUrl, callback) {\n      var img;\n      img = document.createElement(\"img\");\n      img.onload = (function(_this) {\n        return function() {\n          var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;\n          file.width = img.width;\n          file.height = img.height;\n          resizeInfo = _this.options.resize.call(_this, file);\n          if (resizeInfo.trgWidth == null) {\n            resizeInfo.trgWidth = resizeInfo.optWidth;\n          }\n          if (resizeInfo.trgHeight == null) {\n            resizeInfo.trgHeight = resizeInfo.optHeight;\n          }\n          canvas = document.createElement(\"canvas\");\n          ctx = canvas.getContext(\"2d\");\n          canvas.width = resizeInfo.trgWidth;\n          canvas.height = resizeInfo.trgHeight;\n          drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n          thumbnail = canvas.toDataURL(\"image/png\");\n          _this.emit(\"thumbnail\", file, thumbnail);\n          if (callback != null) {\n            return callback();\n          }\n        };\n      })(this);\n      if (callback != null) {\n        img.onerror = callback;\n      }\n      return img.src = imageUrl;\n    };\n\n    Dropzone.prototype.processQueue = function() {\n      var i, parallelUploads, processingLength, queuedFiles;\n      parallelUploads = this.options.parallelUploads;\n      processingLength = this.getUploadingFiles().length;\n      i = processingLength;\n      if (processingLength >= parallelUploads) {\n        return;\n      }\n      queuedFiles = this.getQueuedFiles();\n      if (!(queuedFiles.length > 0)) {\n        return;\n      }\n      if (this.options.uploadMultiple) {\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n      } else {\n        while (i < parallelUploads) {\n          if (!queuedFiles.length) {\n            return;\n          }\n          this.processFile(queuedFiles.shift());\n          i++;\n        }\n      }\n    };\n\n    Dropzone.prototype.processFile = function(file) {\n      return this.processFiles([file]);\n    };\n\n    Dropzone.prototype.processFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.processing = true;\n        file.status = Dropzone.UPLOADING;\n        this.emit(\"processing\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"processingmultiple\", files);\n      }\n      return this.uploadFiles(files);\n    };\n\n    Dropzone.prototype._getFilesWithXhr = function(xhr) {\n      var file, files;\n      return files = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.files;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          if (file.xhr === xhr) {\n            _results.push(file);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Dropzone.prototype.cancelUpload = function(file) {\n      var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;\n      if (file.status === Dropzone.UPLOADING) {\n        groupedFiles = this._getFilesWithXhr(file.xhr);\n        for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {\n          groupedFile = groupedFiles[_i];\n          groupedFile.status = Dropzone.CANCELED;\n        }\n        file.xhr.abort();\n        for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {\n          groupedFile = groupedFiles[_j];\n          this.emit(\"canceled\", groupedFile);\n        }\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", groupedFiles);\n        }\n      } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {\n        file.status = Dropzone.CANCELED;\n        this.emit(\"canceled\", file);\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", [file]);\n        }\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    resolveOption = function() {\n      var args, option;\n      option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (typeof option === 'function') {\n        return option.apply(this, args);\n      }\n      return option;\n    };\n\n    Dropzone.prototype.uploadFile = function(file) {\n      return this.uploadFiles([file]);\n    };\n\n    Dropzone.prototype.uploadFiles = function(files) {\n      var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\n      xhr = new XMLHttpRequest();\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.xhr = xhr;\n      }\n      method = resolveOption(this.options.method, files);\n      url = resolveOption(this.options.url, files);\n      xhr.open(method, url, true);\n      xhr.withCredentials = !!this.options.withCredentials;\n      response = null;\n      handleError = (function(_this) {\n        return function() {\n          var _j, _len1, _results;\n          _results = [];\n          for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n            file = files[_j];\n            _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n          }\n          return _results;\n        };\n      })(this);\n      updateProgress = (function(_this) {\n        return function(e) {\n          var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;\n          if (e != null) {\n            progress = 100 * e.loaded / e.total;\n            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n              file = files[_j];\n              file.upload = {\n                progress: progress,\n                total: e.total,\n                bytesSent: e.loaded\n              };\n            }\n          } else {\n            allFilesFinished = true;\n            progress = 100;\n            for (_k = 0, _len2 = files.length; _k < _len2; _k++) {\n              file = files[_k];\n              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\n                allFilesFinished = false;\n              }\n              file.upload.progress = progress;\n              file.upload.bytesSent = file.upload.total;\n            }\n            if (allFilesFinished) {\n              return;\n            }\n          }\n          _results = [];\n          for (_l = 0, _len3 = files.length; _l < _len3; _l++) {\n            file = files[_l];\n            _results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));\n          }\n          return _results;\n        };\n      })(this);\n      xhr.onload = (function(_this) {\n        return function(e) {\n          var _ref;\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          if (xhr.readyState !== 4) {\n            return;\n          }\n          response = xhr.responseText;\n          if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n            try {\n              response = JSON.parse(response);\n            } catch (_error) {\n              e = _error;\n              response = \"Invalid JSON response from server.\";\n            }\n          }\n          updateProgress();\n          if (!((200 <= (_ref = xhr.status) && _ref < 300))) {\n            return handleError();\n          } else {\n            return _this._finished(files, response, e);\n          }\n        };\n      })(this);\n      xhr.onerror = (function(_this) {\n        return function() {\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          return handleError();\n        };\n      })(this);\n      progressObj = (_ref = xhr.upload) != null ? _ref : xhr;\n      progressObj.onprogress = updateProgress;\n      headers = {\n        \"Accept\": \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n      if (this.options.headers) {\n        extend(headers, this.options.headers);\n      }\n      for (headerName in headers) {\n        headerValue = headers[headerName];\n        xhr.setRequestHeader(headerName, headerValue);\n      }\n      formData = new FormData();\n      if (this.options.params) {\n        _ref1 = this.options.params;\n        for (key in _ref1) {\n          value = _ref1[key];\n          formData.append(key, value);\n        }\n      }\n      for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n        file = files[_j];\n        this.emit(\"sending\", file, xhr, formData);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"sendingmultiple\", files, xhr, formData);\n      }\n      if (this.element.tagName === \"FORM\") {\n        _ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");\n        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n          input = _ref2[_k];\n          inputName = input.getAttribute(\"name\");\n          inputType = input.getAttribute(\"type\");\n          if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n            _ref3 = input.options;\n            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\n              option = _ref3[_l];\n              if (option.selected) {\n                formData.append(inputName, option.value);\n              }\n            }\n          } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \"checkbox\" && _ref4 !== \"radio\") || input.checked) {\n            formData.append(inputName, input.value);\n          }\n        }\n      }\n      for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\n        formData.append(this._getParamName(i), files[i], files[i].name);\n      }\n      return xhr.send(formData);\n    };\n\n    Dropzone.prototype._finished = function(files, responseText, e) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.SUCCESS;\n        this.emit(\"success\", file, responseText, e);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"successmultiple\", files, responseText, e);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    Dropzone.prototype._errorProcessing = function(files, message, xhr) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.ERROR;\n        this.emit(\"error\", file, message, xhr);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"errormultiple\", files, message, xhr);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    return Dropzone;\n\n  })(Emitter);\n\n  Dropzone.version = \"4.0.1\";\n\n  Dropzone.options = {};\n\n  Dropzone.optionsForElement = function(element) {\n    if (element.getAttribute(\"id\")) {\n      return Dropzone.options[camelize(element.getAttribute(\"id\"))];\n    } else {\n      return void 0;\n    }\n  };\n\n  Dropzone.instances = [];\n\n  Dropzone.forElement = function(element) {\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n    if ((element != null ? element.dropzone : void 0) == null) {\n      throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    }\n    return element.dropzone;\n  };\n\n  Dropzone.autoDiscover = true;\n\n  Dropzone.discover = function() {\n    var checkElements, dropzone, dropzones, _i, _len, _results;\n    if (document.querySelectorAll) {\n      dropzones = document.querySelectorAll(\".dropzone\");\n    } else {\n      dropzones = [];\n      checkElements = function(elements) {\n        var el, _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )dropzone($| )/.test(el.className)) {\n            _results.push(dropzones.push(el));\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      };\n      checkElements(document.getElementsByTagName(\"div\"));\n      checkElements(document.getElementsByTagName(\"form\"));\n    }\n    _results = [];\n    for (_i = 0, _len = dropzones.length; _i < _len; _i++) {\n      dropzone = dropzones[_i];\n      if (Dropzone.optionsForElement(dropzone) !== false) {\n        _results.push(new Dropzone(dropzone));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];\n\n  Dropzone.isBrowserSupported = function() {\n    var capableBrowser, regex, _i, _len, _ref;\n    capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n      if (!(\"classList\" in document.createElement(\"a\"))) {\n        capableBrowser = false;\n      } else {\n        _ref = Dropzone.blacklistedBrowsers;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          regex = _ref[_i];\n          if (regex.test(navigator.userAgent)) {\n            capableBrowser = false;\n            continue;\n          }\n        }\n      }\n    } else {\n      capableBrowser = false;\n    }\n    return capableBrowser;\n  };\n\n  without = function(list, rejectedItem) {\n    var item, _i, _len, _results;\n    _results = [];\n    for (_i = 0, _len = list.length; _i < _len; _i++) {\n      item = list[_i];\n      if (item !== rejectedItem) {\n        _results.push(item);\n      }\n    }\n    return _results;\n  };\n\n  camelize = function(str) {\n    return str.replace(/[\\-_](\\w)/g, function(match) {\n      return match.charAt(1).toUpperCase();\n    });\n  };\n\n  Dropzone.createElement = function(string) {\n    var div;\n    div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n  };\n\n  Dropzone.elementInside = function(element, container) {\n    if (element === container) {\n      return true;\n    }\n    while (element = element.parentNode) {\n      if (element === container) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  Dropzone.getElement = function(el, name) {\n    var element;\n    if (typeof el === \"string\") {\n      element = document.querySelector(el);\n    } else if (el.nodeType != null) {\n      element = el;\n    }\n    if (element == null) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n    }\n    return element;\n  };\n\n  Dropzone.getElements = function(els, name) {\n    var e, el, elements, _i, _j, _len, _len1, _ref;\n    if (els instanceof Array) {\n      elements = [];\n      try {\n        for (_i = 0, _len = els.length; _i < _len; _i++) {\n          el = els[_i];\n          elements.push(this.getElement(el, name));\n        }\n      } catch (_error) {\n        e = _error;\n        elements = null;\n      }\n    } else if (typeof els === \"string\") {\n      elements = [];\n      _ref = document.querySelectorAll(els);\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n        el = _ref[_j];\n        elements.push(el);\n      }\n    } else if (els.nodeType != null) {\n      elements = [els];\n    }\n    if (!((elements != null) && elements.length)) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n    }\n    return elements;\n  };\n\n  Dropzone.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) {\n      return accepted();\n    } else if (rejected != null) {\n      return rejected();\n    }\n  };\n\n  Dropzone.isValidFile = function(file, acceptedFiles) {\n    var baseMimeType, mimeType, validType, _i, _len;\n    if (!acceptedFiles) {\n      return true;\n    }\n    acceptedFiles = acceptedFiles.split(\",\");\n    mimeType = file.type;\n    baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {\n      validType = acceptedFiles[_i];\n      validType = validType.trim();\n      if (validType.charAt(0) === \".\") {\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;\n        }\n      } else if (/\\/\\*$/.test(validType)) {\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\n          return true;\n        }\n      } else {\n        if (mimeType === validType) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n    jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n        return new Dropzone(this, options);\n      });\n    };\n  }\n\n  if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = Dropzone;\n  } else {\n    window.Dropzone = Dropzone;\n  }\n\n  Dropzone.ADDED = \"added\";\n\n  Dropzone.QUEUED = \"queued\";\n\n  Dropzone.ACCEPTED = Dropzone.QUEUED;\n\n  Dropzone.UPLOADING = \"uploading\";\n\n  Dropzone.PROCESSING = Dropzone.UPLOADING;\n\n  Dropzone.CANCELED = \"canceled\";\n\n  Dropzone.ERROR = \"error\";\n\n  Dropzone.SUCCESS = \"success\";\n\n\n  /*\n  \n  Bugfix for iOS 6 and 7\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel\n   */\n\n  detectVerticalSquash = function(img) {\n    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\n    iw = img.naturalWidth;\n    ih = img.naturalHeight;\n    canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    data = ctx.getImageData(0, 0, 1, ih).data;\n    sy = 0;\n    ey = ih;\n    py = ih;\n    while (py > sy) {\n      alpha = data[(py - 1) * 4 + 3];\n      if (alpha === 0) {\n        ey = py;\n      } else {\n        sy = py;\n      }\n      py = (ey + sy) >> 1;\n    }\n    ratio = py / ih;\n    if (ratio === 0) {\n      return 1;\n    } else {\n      return ratio;\n    }\n  };\n\n  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    var vertSquashRatio;\n    vertSquashRatio = detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n\n\n  /*\n   * contentloaded.js\n   *\n   * Author: Diego Perini (diego.perini at gmail.com)\n   * Summary: cross-browser wrapper for DOMContentLoaded\n   * Updated: 20101020\n   * License: MIT\n   * Version: 1.2\n   *\n   * URL:\n   * http://javascript.nwbox.com/ContentLoaded/\n   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n   */\n\n  contentLoaded = function(win, fn) {\n    var add, doc, done, init, poll, pre, rem, root, top;\n    done = false;\n    top = true;\n    doc = win.document;\n    root = doc.documentElement;\n    add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");\n    rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");\n    pre = (doc.addEventListener ? \"\" : \"on\");\n    init = function(e) {\n      if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\n        return;\n      }\n      (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n      if (!done && (done = true)) {\n        return fn.call(win, e.type || e);\n      }\n    };\n    poll = function() {\n      var e;\n      try {\n        root.doScroll(\"left\");\n      } catch (_error) {\n        e = _error;\n        setTimeout(poll, 50);\n        return;\n      }\n      return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n      if (doc.createEventObject && root.doScroll) {\n        try {\n          top = !win.frameElement;\n        } catch (_error) {}\n        if (top) {\n          poll();\n        }\n      }\n      doc[add](pre + \"DOMContentLoaded\", init, false);\n      doc[add](pre + \"readystatechange\", init, false);\n      return win[add](pre + \"load\", init, false);\n    }\n  };\n\n  Dropzone._autoDiscoverFunction = function() {\n    if (Dropzone.autoDiscover) {\n      return Dropzone.discover();\n    }\n  };\n\n  contentLoaded(window, Dropzone._autoDiscoverFunction);\n\n}).call(this);\n"]}